/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var PagbilaoUnion = ee.FeatureCollection("users/jeromemaiquez/Pagbilao_Border_Bay");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
////***** Part 1: Adding imagery, filtering to area and date range, 
////***** masking out clouds, and making a composite
/////////////////////////////////////////////////////////////////////

  // Insert Landsat Image Collection and filter 
  // by area using imported Pagbilao shapefile
var image = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
  .filterBounds(PagbilaoUnion)
  .filterDate('2021-01-01', '2022-12-31');

print(image.size());     
Map.centerObject(PagbilaoUnion);
    
  // Function to cloud mask from QA_PIXEL band of Landsat 8 SR data
  // Bits 3 and 4 are cloud shadow and cloud, respectively
function maskL8sr(image) {
  var cloudShadowBitMask = 1 << 4;
  var cloudsBitMask = 1 << 3;
  
  var qa = image.select('QA_PIXEL');
  
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
    .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
    
  return image.updateMask(mask).divide(10000)
    .select("SR_B[0-9]*", "ST_B10")
    .copyProperties(image, ["system:time_start"]);
}  

//   // Filter imagery for 2021 and 2022 harvest seasons
//   // Create joint filter and apply it to Image Collection
// var ani22 = ee.Filter.date('2022-04-01', '2022-06-01');
// var ani21= ee.Filter.date('2021-04-01', '2021-06-01');

// var AniFilter = ee.Filter.or(ani22, ani21);

// var allAni = image.filter(AniFilter);

  // Make a composite: apply cloud mask function,
  // use the median reducer, and clip composite to AOI
var composite = image
              .map(maskL8sr)
              .median()
              .clip(PagbilaoUnion);

  // Display the composite
Map.addLayer(composite, {bands: ['SR_B4', 'SR_B3', 'SR_B2'], min: 0.5, max: 2}, 'Pagbilao Color Image 2022', 0);

  // Naming bands to calculate RS indicepas
var green = composite.select('SR_B3');
var red = composite.select('SR_B4');
var nir = composite.select('SR_B5');
var swir = composite.select('SR_B6');
var thermal = composite.select('ST_B10');
var L = 0.5; //

  // Computing RS indices
var mvi = nir.subtract(green).divide(swir.subtract(green)).clamp(-5, 10).rename('mvi');
var mndwi = green.subtract(swir).divide(green.add(swir)).rename('mndwi');
var ndvi = nir.subtract(red).divide(nir.add(red)).rename('ndvi');
var savi = nir.subtract(red).divide(nir.add(red).add(0.5)).multiply(1.5).rename('savi');
var ndbi = swir.subtract(nir).divide(swir.add(nir)).rename('ndbi');
var bui = ndbi.subtract(ndvi).rename('bui');

  // Simbologia comun para los indices
var Simbologia = {// max: 1, min: 0, // IMPORTANTE variar rangos en funcion del indice
      palette: ['#0000ff', 'DF923D', 'F1B555',
      'FCD163', '99B718', '74A901', '66A000', '529400', '3E8601', '207401',
      '056201', '004C00', '023B01', '012E01', '011D01', '011301']};
      
Map.addLayer(ndvi, Simbologia, 'Pagbilao NDVI 2022');
Map.addLayer(savi, Simbologia, 'Pagbilao SAVI 2022');